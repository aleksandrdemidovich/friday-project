{"version":3,"sources":["pages/Login/Login.module.css","pages/ForgotPassword/ForgotPassword.module.css","pages/ForgotPassword/NewPassword.module.css","components/c1-SuperInputText/SuperInputText.module.css","pages/ForgotPassword/CheckEmail.module.css","pages/Error404.module.css","components/c2-SuperButton/SuperButton.module.css","components/c3-SuperCheckbox/SuperCheckbox.module.css","api/instanceAPI.ts","pages/signUp/signUp-api.ts","pages/signUp/signUp-reducer.ts","pages/Login/Preloader.tsx","pages/signUp/SignUP.tsx","pages/Login/loginReducer.ts","pages/Login/authAPI.ts","pages/Profile/Profile.tsx","pages/Error404.tsx","api/passwordRecoveryAPI.ts","redux/app-reducer.ts","utils/errorResponseHandler.ts","redux/passwordRecovery-reducer.ts","pages/ForgotPassword/ForgotPassword.tsx","pages/ForgotPassword/NewPassword.tsx","components/c2-SuperButton/SuperButton.tsx","components/c3-SuperCheckbox/SuperCheckbox.tsx","components/c1-SuperInputText/SuperInputText.tsx","pages/Test.tsx","temp/TempHeader.tsx","pages/Login/Login.tsx","pages/Login/LoginContainer.tsx","pages/Login/LoginPage.tsx","assets/images/letter.svg","pages/ForgotPassword/CheckEmail.tsx","pages/Routes.tsx","App.tsx","reportWebVitals.ts","redux/profile-reducer.ts","redux/store.ts","index.tsx","pages/signUp/SignUp.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","RegistrationAPI","email","password","post","initialState","status","error","setErrorRegistrationAC","type","setStatusRegistrationAC","Preloader","SignUp","AuthEvents","useSelector","state","signUp","dispatch","useDispatch","formik","useFormik","initialValues","confirmPassword","validate","values","errors","test","length","onSubmit","then","res","console","log","data","catch","e","response","message","resetForm","to","PATH","LOGIN","className","s","title","subtitle","FormBox","handleSubmit","registrWrap","label","field","id","name","onChange","handleChange","value","placeholder","onBlur","handleBlur","touched","style","color","inputWrap","btnWrap","btnLeft","onClick","handleReset","btnRight","disabled","authAPI","me","a","login","rememberMe","logout","delete","user","isLoggedIn","loading","authActions","payload","SET_USER_DATA","SET_LOADING","SET_ERROR","LOGOUT","Profile","auth","src","avatar","alt","Error404","wrap","notfound","notfound404","navLink","PROFILE","passwordRecoveryAPI","from","resetPasswordToken","isInitialized","setAppStatus","setAppError","errorResponseHandler","isAxiosError","setEmail","ForgotPassword","appStatus","app","appError","CHECK_EMAIL","forgotPassword","margin","formBox","textLight","btnBlue","boxLink","linkBlue","NewPassword","token","useParams","newPassword","autoComplete","SuperButton","red","restProps","finalClassName","default","SuperCheckbox","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","finalSpanClassName","input","errorInput","superInput","htmlFor","key","placeHolder","hidePlaceHolder","Test","TempHeader","display","flexDirection","justifyContent","TEST","SIGN_UP","NEW_PASSWORD","FORGOT_PASSWORD","ERROR_404","Login","getFieldProps","loginTitle","loginSubtitle","loginLabel","loginField","linkTransparent","linkWrap","LoginContainer","loginTC","props","LoginPage","CheckEmail","passwordRecovery","checkEmail","letterImg","Routes","path","exact","render","App","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","age","rootReducers","combineReducers","profile","action","store","createStore","applyMiddleware","thunkMiddleWare","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9b87d65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__e8ne4\",\"loginTitle\":\"Login_loginTitle__2_s5g\",\"loginSubtitle\":\"Login_loginSubtitle__2UzZH\",\"FormBox\":\"Login_FormBox__2O5LO\",\"registrWrap\":\"Login_registrWrap__2x_95\",\"loginLabel\":\"Login_loginLabel__1T3tZ\",\"loginField\":\"Login_loginField__2_iDM\",\"inputWrap\":\"Login_inputWrap__1pGvN\",\"linkTransparent\":\"Login_linkTransparent__1e87P\",\"btnBlue\":\"Login_btnBlue__2gApp\",\"linkWrap\":\"Login_linkWrap__XgNzK\",\"textLight\":\"Login_textLight__1CJPu\",\"linkBlue\":\"Login_linkBlue__2zuUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPassword\":\"ForgotPassword_forgotPassword__TwWaw\",\"formBox\":\"ForgotPassword_formBox__1iaYd\",\"title\":\"ForgotPassword_title__3hK3c\",\"subtitle\":\"ForgotPassword_subtitle__2Hxih\",\"field\":\"ForgotPassword_field__238Ff\",\"inputWrap\":\"ForgotPassword_inputWrap__1Zrxd\",\"textLight\":\"ForgotPassword_textLight__1UNz_\",\"btnBlue\":\"ForgotPassword_btnBlue__1LgRH\",\"boxLink\":\"ForgotPassword_boxLink__1yscQ\",\"linkLight\":\"ForgotPassword_linkLight__22yYD\",\"linkBlue\":\"ForgotPassword_linkBlue__2YIh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"NewPassword_newPassword__ja_z0\",\"title\":\"NewPassword_title__3SYJy\",\"subtitle\":\"NewPassword_subtitle__3_FA7\",\"formBox\":\"NewPassword_formBox__8KU5j\",\"inputWrap\":\"NewPassword_inputWrap__1GNCi\",\"field\":\"NewPassword_field__3iO08\",\"textLight\":\"NewPassword_textLight__21JB-\",\"btnBlue\":\"NewPassword_btnBlue__9WYCa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"SuperInputText_inputWrap__3-vJ3\",\"superInput\":\"SuperInputText_superInput__3bIrW\",\"placeHolder\":\"SuperInputText_placeHolder__jNWZW\",\"hidePlaceHolder\":\"SuperInputText_hidePlaceHolder__mg2sB\",\"errorInput\":\"SuperInputText_errorInput__yMflc\",\"error\":\"SuperInputText_error__3fTGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkEmail\":\"CheckEmail_checkEmail__GlaTj\",\"title\":\"CheckEmail_title__30TH7\",\"letterImg\":\"CheckEmail_letterImg__2fLlW\",\"subtitle\":\"CheckEmail_subtitle__316C0\",\"textLight\":\"CheckEmail_textLight__inZ5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Error404_wrap__1IT3M\",\"notfound\":\"Error404_notfound__1iP_a\",\"notfound404\":\"Error404_notfound404__1xmNg\",\"navLink\":\"Error404_navLink__3nnfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2tZIj\",\"focus-visible\":\"SuperButton_focus-visible__9h7-y\",\"red\":\"SuperButton_red__HzRdF\",\"button-24\":\"SuperButton_button-24__1nia5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1MDne\",\"spanClassName\":\"SuperCheckbox_spanClassName__12xAq\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n});","import {instance} from \"../../api/instanceAPI\";\r\n\r\nexport const RegistrationAPI = {\r\n    signUp(email: string, password: string) {\r\n        return instance.post<SignUpDataType>('auth/register', {email, password})\r\n\r\n    }\r\n}\r\n\r\ntype SignUpDataType = {\r\n    error?: string\r\n}","import {Dispatch} from \"redux\";\r\nimport {RegistrationAPI} from \"./signUp-api\";\r\n\r\n\r\nconst SET_ERROR_REGISTRATION = \"SET_ERROR_REGISTRATION\"\r\nconst SET_STATUS_REGISTRATION = \"SET_STATUS_REGISTRATION\"\r\n\r\nconst initialState: initialStateType = {\r\n    status: 'idle',\r\n    error: null\r\n}\r\n\r\ntype initialStateType = {\r\n    status: RequestStatusType\r\n    error: string | null\r\n}\r\n\r\nexport const signUpReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_ERROR_REGISTRATION\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        case \"SET_STATUS_REGISTRATION\": {\r\n            return {...state, status: action.status}\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n//action\r\n\r\nexport const setErrorRegistrationAC = (error: string) => {\r\n    return {\r\n        type: SET_ERROR_REGISTRATION,\r\n        error\r\n    } as const\r\n}\r\nexport const setStatusRegistrationAC = (status: RequestStatusType) => {\r\n    return {\r\n        type: SET_STATUS_REGISTRATION,\r\n        status\r\n    } as const\r\n}\r\n\r\n//thunk\r\nexport const setNewUserTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    dispatch(setStatusRegistrationAC('loading'))\r\n    RegistrationAPI.signUp(email, password)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            dispatch(setStatusRegistrationAC('succeeded'))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            dispatch(setErrorRegistrationAC(error))\r\n            dispatch(setStatusRegistrationAC('failed'))\r\n        })\r\n}\r\n\r\n\r\n//types\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\ntype ActionsType = | ReturnType<typeof setErrorRegistrationAC> | ReturnType<typeof setStatusRegistrationAC>\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <>\r\n            <h1>...LOADING</h1>\r\n        </>\r\n    )\r\n}","import s from \"./SignUp.module.css\"\r\nimport React from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport {RequestStatusType, setErrorRegistrationAC, setNewUserTC} from \"./signUp-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\nimport {Preloader} from \"../Login/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\nfunction SignUp() {\r\n\r\n    const error = useSelector<AppStateType, string | null>(state => state.signUp.error)\r\n    const status = useSelector<AppStateType, RequestStatusType>(state => state.signUp.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Length password should be 8 symbols';\r\n            }\r\n\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Required';\r\n            } else if (values.confirmPassword.length < 8) {\r\n                errors.confirmPassword = 'Length password should be 8 symbols';\r\n            } else if (values.password !== values.confirmPassword) {\r\n                dispatch(setErrorRegistrationAC('Please make sure you passwords match'));\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n\r\n            dispatch(setNewUserTC(values.email, values.password))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (status === 'succeeded') {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={s.signUp}>\r\n            {status === 'loading' && <Preloader/>}\r\n            <h2 className={s.title}>It-incubator</h2>\r\n            <h3 className={s.subtitle}>Sign Up</h3>\r\n            <form className={s.FormBox} onSubmit={formik.handleSubmit}>\r\n                <div className={s.registrWrap}>\r\n                    <label className={s.label}>Email</label>\r\n                    <input className={s.field}\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.email}\r\n                        placeholder=\"j&johnson@gmail.com\r\n                        \"\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                </div>\r\n\r\n                {formik.touched.email && formik.errors.email && <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n\r\n                <div className={s.registrWrap}>\r\n                    <label className={s.label}>Password</label>\r\n                    <div className={s.inputWrap}>\r\n                        <input className={s.field}\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.password}\r\n                        placeholder=\"*********\"\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    </div>\r\n                </div>\r\n\r\n                {formik.touched.password && formik.errors.password &&\r\n                <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n\r\n                <div className={s.registrWrap}>\r\n                    <label className={s.label}>Confirm password</label>\r\n                    <div className={s.inputWrap}>\r\n                        <input className={s.field}\r\n                        id=\"confirmPassword\"\r\n                        name=\"confirmPassword\"\r\n                        type=\"password\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.confirmPassword}\r\n                        placeholder=\"*********\"\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    </div>\r\n                </div>\r\n{/* \r\n                {formik.touched.confirmPassword && formik.errors.confirmPassword &&\r\n                <div style={{color: 'red'}}>{formik.errors.confirmPassword}</div>} */}\r\n        \r\n            <div className={s.btnWrap}>\r\n                <button className={s.btnLeft} type=\"button\" onClick={formik.handleReset}>Cancel</button>\r\n                <button className={s.btnRight} type=\"submit\" disabled={status === 'loading'}>Sign Up</button>\r\n            \r\n            {error !== null && <div style={{color: 'red'}}>{error}</div>}\r\n            </div>\r\n        </form>\r\n    </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default SignUp","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {authAPI} from \"./authAPI\";\r\n\r\nexport enum AuthEvents {\r\n    SET_USER_DATA = 'SET_USER_DATA',\r\n    SET_LOADING = 'SET_LOADING',\r\n    SET_ERROR = 'SET_ERROR',\r\n    LOGOUT = 'LOGOUT'\r\n}\r\n//types\r\n\r\n\r\nexport type AuthStateType = {\r\n    user: IUser | null\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n    loading: boolean\r\n}\r\n\r\nexport const initialState: AuthStateType = {\r\n    user: null,\r\n    isLoggedIn: false,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nexport type  IUser = {\r\n    _id: string\r\n    avatar: string\r\n    email: string\r\n    name: string\r\n    token:string\r\n    tokenDeathTime:number\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type InferActionsType<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n\r\nexport type AuthActionsType = InferActionsType<typeof authActions>\r\n\r\n// reducer\r\nexport const loginReducer = (state = initialState, action: AuthActionsType) => {\r\n    switch (action.type) {\r\n        case AuthEvents.SET_USER_DATA:\r\n            return {...state, user: action.payload, isLoggedIn: true, loading: false}\r\n        case AuthEvents.SET_LOADING:\r\n            return {...state, loading: action.payload}\r\n        case AuthEvents.SET_ERROR:\r\n            return {...state, error: action.error, loading: false}\r\n        case AuthEvents.LOGOUT:\r\n            return {...state, isLoggedIn: false, loading: false, error: '', user: null}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n// actions creators\r\nexport const authActions = {\r\nsetUserData: (payload: IUser) => {\r\n    return {\r\n        type: AuthEvents.SET_USER_DATA,\r\n        payload\r\n    } as const\r\n},\r\n    setLoading: (payload: boolean) => {\r\n        return {\r\n            type: AuthEvents.SET_LOADING,\r\n            payload\r\n        } as const\r\n    },\r\n    setError: (error: string) => {\r\n        return {\r\n            type: AuthEvents.SET_ERROR,\r\n            error\r\n        } as const\r\n    },\r\n    logout: () => {\r\n    return {\r\n        type: AuthEvents.LOGOUT\r\n    } as const\r\n    },\r\n}\r\n\r\n// thunks\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean): ThunkAction<void, AppStateType, {}, any> => async (dispatch) => {\r\n    dispatch(authActions.setLoading(true))\r\n    try {\r\n        const data = await authAPI.login(email, password, rememberMe);\r\n        dispatch(authActions.setUserData(data))\r\n        dispatch(authActions.setLoading(false))\r\n    } catch (e:any) {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n        dispatch(authActions.setError(error))\r\n    }\r\n    finally {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const initializingTC = (): ThunkAction<void, AppStateType, {}, any> => async (dispatch) => {\r\n    dispatch(authActions.setLoading(true))\r\n    try {\r\n        const data = await authAPI.me()\r\n        dispatch(authActions.setUserData(data))\r\n    } catch (e:any) {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n        dispatch(authActions.setError(error))\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const logoutTC = (): ThunkAction<void, AppStateType, {}, any> => async (dispatch) => {\r\n    dispatch(authActions.setLoading(true))\r\n    try {\r\n        const response = await authAPI.logout()\r\n        dispatch(authActions.logout())\r\n        return response\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n}","import axios from \"axios\";\r\nimport {IUser} from \"./loginReducer\";\r\n\r\nexport const baseURL = 'https://neko-back.herokuapp.com/2.0/';\r\n\r\n\r\nexport const instance = axios.create({\r\n    baseURL: baseURL,\r\n    withCredentials: true\r\n})\r\n\r\nexport type DefaultResponse = {\r\n    info: string,\r\n    error?: string\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    me: async () => {\r\n        const response = await instance.post<IUser>('auth/me')\r\n        return response.data\r\n    },\r\n    login: async (email: string, password:string, rememberMe:boolean) => {\r\n        const response = await instance.post<IUser>('auth/login', {email, password, rememberMe})\r\n        return response.data\r\n    },\r\n    logout: async () => {\r\n        const response = await instance.delete<DefaultResponse>('auth/me')\r\n        console.log('LOGOUT: ', response.data)\r\n        return response.data\r\n    },\r\n}\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {IUser, logoutTC} from \"../Login/loginReducer\";\r\nimport {Preloader} from \"../Login/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\n\r\n\r\nfunction Profile() {\r\n    const user = useSelector<AppStateType, IUser | null>(state => state.auth.user)\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const loading = useSelector<AppStateType, boolean>(state => state.auth.loading)\r\n    const dispatch = useDispatch()\r\n\r\n    const logout = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div>\r\n            {loading && <Preloader/>}\r\n            <div>\r\n                {\r\n                    user !== null ? <div>\r\n                        <img src={user.avatar} alt='avatar'/>\r\n                        <p/>\r\n                        Name: {user.name}\r\n                        <p/>\r\n                        E-Mail: {user.email}\r\n                        <p/>\r\n                    </div> : 'No data'\r\n                }\r\n            </div>\r\n            <button onClick={logout} disabled={!isLoggedIn}>Logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Error404.module.css'\r\nimport {PATH} from \"./Routes\";\r\n\r\n\r\nfunction Error404() {\r\n\r\n    return (\r\n        <div className={s.wrap}>\r\n            <div className={s.notfound}>\r\n\r\n                <div className={s.notfound404}>\r\n                    <h1>404</h1>\r\n                </div>\r\n                <h2>Oops! This Page Could Not Be Found</h2>\r\n                <p>Sorry but the page you are looking for does not exist, have been removed. name changed or is\r\n                    temporarily unavailable</p>\r\n\r\n                <NavLink className={s.navLink} to={PATH.PROFILE}>Go To Homepage</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import {instance} from \"./instanceAPI\";\r\n\r\ntype RecoveryResponseType = {\r\n    info: string\r\n    error?: string\r\n}\r\n\r\nexport const passwordRecoveryAPI = {\r\n    passRecovery(email: string, message: string) {\r\n        return instance.post<RecoveryResponseType>('auth/forgot', {\r\n            email,\r\n            message,\r\n            from: \"front-admin <demid.kbr@mail.ru>\"\r\n        });\r\n    },\r\n    inputNewPass(password: string, resetPasswordToken: string | undefined) {\r\n        return instance.post<RecoveryResponseType>('auth/set-new-password', {password, resetPasswordToken})\r\n    }\r\n}","export type AppStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\ntype InitialStateType = {\r\n    status: AppStatusType\r\n    error: string\r\n    isInitialized: boolean\r\n}\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: '',\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-APP-STATUS':\r\n            return {...state, status: action.payload.status};\r\n        case 'SET-APP-ERROR':\r\n            return {...state, error: action.payload.error}\r\n        case 'SET-APP-IS-INITIALIZED':\r\n            return {...state, isInitialized: action.payload.isInitialized}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setAppStatus = (payload: { status: AppStatusType }) => ({type: 'SET-APP-STATUS', payload} as const)\r\nexport const setAppError = (payload: { error: string }) => ({type: 'SET-APP-ERROR', payload} as const)\r\nexport const setIsInitialized = (payload: { isInitialized: boolean }) => ({\r\n    type: 'SET-APP-IS-INITIALIZED',\r\n    payload\r\n} as const)\r\n\r\n\r\nexport type AppActionsType =\r\n    | ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setAppError>\r\n    | ReturnType<typeof setIsInitialized>","import {setAppError, setAppStatus} from \"../redux/app-reducer\";\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport default function errorResponseHandler(e: any, dispatch: Dispatch) {\r\n    if (axios.isAxiosError(e) && e.response) {\r\n        dispatch(setAppError({error: e.response.data.error}))\r\n    } else {\r\n        dispatch(setAppError({error: 'Some error occurred, check your connection.'}))\r\n    }\r\n    dispatch(setAppStatus({status: 'failed'}))\r\n}","import {Dispatch} from 'redux';\r\nimport {passwordRecoveryAPI} from '../api/passwordRecoveryAPI';\r\nimport {setAppError, setAppStatus} from \"./app-reducer\";\r\nimport errorResponseHandler from \"../utils/errorResponseHandler\";\r\n\r\n\r\nexport type RecoveryStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\ntype InitialStateType = {\r\n    email: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    email: '',\r\n}\r\n\r\nexport type PasswordRecoveryActionsType = setEmailActionType\r\n\r\n\r\nexport const passwordRecoveryReducer = (state = initialState, action: PasswordRecoveryActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_EMAIL': {\r\n            return {...state, ...action.payload};\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\ntype setEmailActionType = ReturnType<typeof setEmail>\r\nexport const setEmail = (email: string) => ({\r\n    type: 'SET_EMAIL',\r\n    payload: {email}\r\n} as const);\r\n\r\nexport const passwordRecovery = (email: string, message: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppError({error: ''}))\r\n        dispatch(setAppStatus({status: 'loading'}));\r\n        await passwordRecoveryAPI.passRecovery(email, message);\r\n        dispatch(setAppStatus({status: 'succeeded'}));\r\n        dispatch((setEmail(email)))\r\n    } catch (e: any) {\r\n        errorResponseHandler(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const inputNewPassword = (password: string, resetPasswordToken: string | undefined) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppError({error: ''}))\r\n        dispatch(setAppStatus({status: 'loading'}));\r\n        await passwordRecoveryAPI.inputNewPass(password, resetPasswordToken);\r\n        dispatch(setAppStatus({status: 'succeeded'}));\r\n    } catch (e) {\r\n        errorResponseHandler(e, dispatch)\r\n    }\r\n}\r\n\r\n","import s from \"./ForgotPassword.module.css\"\r\nimport React from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {passwordRecovery, RecoveryStatusType} from \"../../redux/passwordRecovery-reducer\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nfunction ForgotPassword() {\r\n    const messageForEmail = `<div style={{'backgroundColor': 'lime', 'padding': '15px'}}>Password recovery link:<a href='http://localhost:3000/friday-project#/set-new-password/$token$'> link</a></div>`\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const appStatus = useSelector<AppStateType, RecoveryStatusType>(state => state.app.status);\r\n    const appError = useSelector<AppStateType, string>(state => state.app.error);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(passwordRecovery(values.email, messageForEmail))\r\n        },\r\n    })\r\n\r\n\r\n    if (appStatus === 'succeeded') {\r\n        return <Redirect to={PATH.CHECK_EMAIL}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.forgotPassword}>\r\n            <h2 className={s.title}>It-incubator</h2>\r\n            <h3 className={s.subtitle}>Forgot your password?</h3>\r\n            {appStatus === 'loading' && <p style={{color: \"green\", margin: 0}}>Loading...</p>}\r\n            \r\n                <form className={s.formBox} onSubmit={formik.handleSubmit}>\r\n                    <div className={s.inputWrap}>\r\n                        <input className={s.field}\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            disabled={appStatus === 'loading'}\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.email}\r\n                            placeholder=\"Email\"\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </div>\r\n\r\n                    {formik.touched.email && formik.errors.email &&\r\n                    <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n                    {appError && <div style={{color: 'red'}}>{appError}</div>}\r\n\r\n                    <p className={s.textLight}>\r\n                        Enter your email address and we will send you further instructions\r\n                    </p>\r\n                    <button className={s.btnBlue} type=\"submit\" disabled={appStatus === 'loading'}>Send Instructions</button>\r\n                </form>\r\n\r\n                <div className={s.boxLink}>\r\n                {/* <NavLink className={s.btnBlue} to={PATH.CHECK_EMAIL}>Send Instructions</NavLink> */}\r\n\r\n                    <p className={s.textLight}>\r\n                        Did you remember your password?\r\n                    </p>\r\n\r\n                    <NavLink className={s.linkBlue} to={PATH.LOGIN}>Try logging in</NavLink>\r\n                </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import s from \"./NewPassword.module.css\"\r\nimport React from 'react'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {inputNewPassword, RecoveryStatusType} from \"../../redux/passwordRecovery-reducer\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\n\r\ntype FormikErrorType = {\r\n    password?: string\r\n}\r\n\r\nfunction NewPassword() {\r\n    const {token} = useParams<{ token: string }>()\r\n\r\n    const dispatch = useDispatch();\r\n    const appStatus = useSelector<AppStateType, RecoveryStatusType>(state => state.app.status);\r\n    const appError = useSelector<AppStateType, string>(state => state.app.error);\r\n\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (values.password.length < 3) {\r\n                errors.password = 'Min length 7 symbols';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(inputNewPassword(values.password, token))\r\n        },\r\n    })\r\n\r\n    return (\r\n        <div className={s.newPassword}>\r\n            \r\n            <h2 className={s.title}>It-incubator</h2>\r\n            <h3 className={s.subtitle}>Create new password</h3>\r\n\r\n            {appStatus === 'loading' && <p style={{color: \"green\", margin: 0}}>Loading...</p>}\r\n\r\n            <form className={s.FormBox} onSubmit={formik.handleSubmit}>\r\n                <div className={s.inputWrap}>\r\n                    <input className={s.field}\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        autoComplete='off'\r\n                        disabled={appStatus === 'loading'}\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.password}\r\n                        placeholder=\"Password\"\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                </div>\r\n\r\n                {formik.touched.password && formik.errors.password &&\r\n                <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n                {appError && <div style={{color: 'red'}}>{appError}</div>}\r\n\r\n                <p className={s.textLight}>Create new password and we will send you further instructions to email</p>\r\n\r\n                <button className={s.btnBlue} type=\"submit\" disabled={appStatus === 'loading'}>Create new password</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPassword","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeChecked) {\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n\r\n        if (onChange) {\r\n            onChange(e)\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label >\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n\r\n    return (\r\n        <div className={s.inputWrap}>\r\n            <label htmlFor=\"name\">\r\n            <input\r\n                type={'text'}\r\n                autoComplete='off'\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                name=\"name\"\r\n                id='name'\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n                {<span className={ restProps.value === '' ? s.placeHolder: s.hidePlaceHolder }>Type here</span>}\r\n            </label>\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React from 'react'\r\nimport SuperButton from \"../components/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"../components/c1-SuperInputText/SuperInputText\";\r\n\r\n\r\nfunction Test() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Test Page</h1>\r\n            <SuperInputText/>\r\n            <SuperButton>Test</SuperButton>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test","import {NavLink} from \"react-router-dom\"\r\nimport React from \"react\";\r\nimport {PATH} from \"../pages/Routes\";\r\n\r\n\r\nfunction TempHeader() {\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between'}}>\r\n            <NavLink to={PATH.TEST}>Test Page</NavLink>\r\n            <NavLink to={PATH.SIGN_UP}>Sign Up Page</NavLink>\r\n            <NavLink to={PATH.LOGIN}>Login Page</NavLink>\r\n            <NavLink to={PATH.PROFILE}>Profile</NavLink>\r\n            <NavLink to={PATH.NEW_PASSWORD}>New Password Page</NavLink>\r\n            <NavLink to={PATH.FORGOT_PASSWORD}>Forgot Password Page</NavLink>\r\n            <NavLink to={PATH.ERROR_404}>404 Error Page</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TempHeader","import s from \"./Login.module.css\"\r\nimport React from 'react'\r\nimport {Field, Form, FormikProps} from \"formik\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from \"../Routes\";\r\n\r\ntype LoginPropsType = FormikProps<any> & {\r\n    error: string | null,\r\n    loading: boolean\r\n}\r\n\r\n\r\nexport const Login: React.FC<LoginPropsType> =\r\n    ({handleSubmit, getFieldProps, error, loading }) => {\r\n\r\n        return (\r\n        <>\r\n            <div className={s.login}>\r\n                <h2 className={s.loginTitle}>It-incubator</h2>\r\n                <h3 className={s.loginSubtitle}>Sign In</h3>\r\n                <Form className={s.FormBox} onSubmit={handleSubmit}>\r\n                    <div className={s.registrWrap}>\r\n                        <label className={s.loginLabel}>Email</label>\r\n                        <input className={s.loginField}\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        {...getFieldProps('email')}\r\n                    />\r\n                    </div>\r\n                    <p/>\r\n                    <div className={s.registrWrap}>\r\n                        <label className={s.loginLabel}>Password</label>\r\n                        <div className={s.inputWrap}>\r\n                            <input className={s.loginField}\r\n                        id=\"email\"\r\n                        type=\"password\"\r\n                        {...getFieldProps('password')}\r\n                    />\r\n                        </div>\r\n                    </div>\r\n                    <p/>\r\n                    {/* <label>Remember me</label>\r\n                    <input\r\n                        id=\"rememberMe\"\r\n                        type=\"checkbox\"\r\n                        {...getFieldProps('rememberMe')}\r\n                    /> */}\r\n                    <p/>\r\n                    \r\n                    <NavLink className={s.linkTransparent} to={PATH.FORGOT_PASSWORD}>\r\n                    Forgot Password\r\n                </NavLink>\r\n                    <button className={s.btnBlue} type={'submit'} disabled={loading}>Login</button>\r\n                \r\n                <div className={s.linkWrap}>\r\n                <p className={s.textLight}>\r\n                Don’t have an account?\r\n                </p>\r\n                <NavLink className={s.linkBlue} to={PATH.SIGN_UP}>\r\n                    Sign up\r\n                </NavLink>\r\n                </div>\r\n            </Form>\r\n                {/* {error !== null && <div style={{color: 'red'}}>{error}</div>} */}\r\n                </div>\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\nexport default Login","import React from 'react'\r\nimport {Formik} from \"formik\";\r\nimport Login from \"./Login\";\r\nimport {AuthStateType, loginTC} from \"./loginReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {PATH} from \"../Routes\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Preloader} from \"./Preloader\";\r\n\r\n\r\ntype ErrorsType = {\r\n    email?: string\r\n    password?: string\r\n}\r\n\r\n\r\n\r\nfunction LoginContainer() {\r\n    const {isLoggedIn, loading, error} = useSelector<AppStateType, AuthStateType>(state => state.auth)\r\n    const dispatch = useDispatch();\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n    return (\r\n        <>\r\n            {loading && <Preloader/>}\r\n            <Formik\r\n                initialValues={{email: 'nya-admin@nya.nya', password: '1qazxcvBG', rememberMe: false}}\r\n                validate={values => {\r\n                    const errors: ErrorsType = {};\r\n\r\n                    if (!values.email) {\r\n                        errors.email = 'This field is required!';\r\n                    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n                        errors.email = 'Invalid email format';\r\n                    }\r\n\r\n                    if (!values.password) {\r\n                        errors.password = 'This field is required!';\r\n                    } else if (values.password.length < 8) {\r\n                        errors.password = 'Password must be more than 7 characters';\r\n                    }\r\n\r\n                    return errors;\r\n                }}\r\n                onSubmit={ ({email, password, rememberMe}) => {\r\n                  dispatch( loginTC(email, password, rememberMe))\r\n                }}\r\n            >\r\n                {\r\n                    (props) => (\r\n                        <Login {...props} error={error} loading={loading}/>\r\n                    )\r\n                }\r\n\r\n            </Formik>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginContainer","import React from 'react';\r\nimport LoginContainer from \"./LoginContainer\";\r\n\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <>\r\n            <LoginContainer />\r\n        </>\r\n    );\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/letter.005fbbd1.svg\";","import s from \"./CheckEmail.module.css\"\r\nimport React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport letterImg from '../../assets/images/letter.svg';\r\n\r\n\r\n\r\nfunction CheckEmail() {\r\n\r\n    const email = useSelector<AppStateType, string>(state => state.passwordRecovery.email)\r\n\r\n    return (\r\n        <div className={s.checkEmail}>\r\n            <h2 className={s.title}>It-incubator</h2>\r\n            <img className={s.letterImg} src={letterImg} alt=\"latter\" />           \r\n            <h3 className={s.subtitle}>Check Email</h3>\r\n            <p className={s.textLight}>We've sent an Email with instructions to {email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckEmail\r\n","import {Redirect, Switch} from \"react-router-dom\"\r\nimport SignUp from \"./signUp/SignUP\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport Error404 from \"./Error404\";\r\nimport ForgotPassword from \"./ForgotPassword/ForgotPassword\";\r\nimport NewPassword from \"./ForgotPassword/NewPassword\";\r\nimport Test from \"./Test\";\r\nimport {Route} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport TempHeader from \"../temp/TempHeader\";\r\nimport {LoginPage} from \"./Login/LoginPage\";\r\nimport CheckEmail from \"./ForgotPassword/CheckEmail\";\r\n\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    SIGN_UP: '/signup',\r\n    PROFILE: '/profile',\r\n    ERROR_404: '/error404',\r\n    FORGOT_PASSWORD: '/forgotpassword',\r\n    NEW_PASSWORD: '/set-new-password/:token',\r\n    CHECK_EMAIL: '/checkemail',\r\n    TEST: '/test',\r\n}\r\n\r\n\r\nfunction Routes() {\r\n\r\n    return (\r\n        <>\r\n           <TempHeader/>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <LoginPage/>}/>\r\n                <Route path={PATH.SIGN_UP} render={() => <SignUp/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.FORGOT_PASSWORD} render={() => <ForgotPassword/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route path={PATH.CHECK_EMAIL} render={() => <CheckEmail/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Routes from \"./pages/Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {initializingTC} from \"./pages/Login/loginReducer\";\r\n\r\n\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect( ()=>{\r\n        dispatch(initializingTC())\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"wrapper\">\r\n        <HashRouter>\r\n            <Routes/>\r\n        </HashRouter>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const SET_PROFILE = \"SET-PROFILE\"\r\n\r\n\r\nconst initialState = {\r\n    name: 'Aleksandr',\r\n    age: 23\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-PROFILE\": {\r\n            return {...state, name: action.name, age: action.age}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ActionsType = setProfileActionType\r\n\r\nexport type setProfileActionType = ReturnType<typeof setProfileAction>\r\nexport const setProfileAction = (name: string, age: number) => {\r\n    return {\r\n        type: SET_PROFILE,\r\n        name, age\r\n    } as const\r\n}\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { profileReducer } from \"./profile-reducer\";\r\nimport thunkMiddleWare from 'redux-thunk'\r\nimport {passwordRecoveryReducer} from \"./passwordRecovery-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport { loginReducer } from \"../pages/Login/loginReducer\";\r\nimport {signUpReducer} from \"../pages/signUp/signUp-reducer\";\r\n\r\n\r\nlet rootReducers = combineReducers({\r\n    profile: profileReducer,\r\n    auth: loginReducer,\r\n    signUp: signUpReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    app: appReducer\r\n})\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducers>\r\nexport type storeType = typeof store\r\nconst store = createStore( rootReducers, applyMiddleware(thunkMiddleWare))\r\n\r\nexport default store\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signUp\":\"SignUp_signUp__3r9dd\",\"title\":\"SignUp_title__2VUD8\",\"subtitle\":\"SignUp_subtitle__2yWk-\",\"FormBox\":\"SignUp_FormBox__NLcRu\",\"registrWrap\":\"SignUp_registrWrap__3kUIN\",\"label\":\"SignUp_label__30AYO\",\"field\":\"SignUp_field__36SaB\",\"inputWrap\":\"SignUp_inputWrap__97QWp\",\"btnWrap\":\"SignUp_btnWrap__-goAU\",\"btnLeft\":\"SignUp_btnLeft__1hCsN\",\"btnRight\":\"SignUp_btnRight__BqyTw\"};"],"sourceRoot":""}