{"version":3,"sources":["components/c1-SuperInputText/SuperInputText.module.css","pages/Error404.module.css","components/c2-SuperButton/SuperButton.module.css","components/c3-SuperCheckbox/SuperCheckbox.module.css","pages/Login.tsx","pages/SignUP.tsx","pages/Profile.tsx","pages/Error404.tsx","pages/ForgotPassword.tsx","pages/NewPassword.tsx","components/c2-SuperButton/SuperButton.tsx","components/c3-SuperCheckbox/SuperCheckbox.tsx","components/c1-SuperInputText/SuperInputText.tsx","pages/Test.tsx","temp/TempHeader.tsx","pages/Routes.tsx","App.tsx","reportWebVitals.ts","redux/profile-reducer.ts","redux/store.ts","index.tsx"],"names":["module","exports","Login","SignUp","Profile","Error404","className","s","wrap","notfound","notfound404","navLink","to","PATH","PROFILE","ForgotPassword","NewPassword","SuperButton","red","restProps","finalClassName","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","input","errorInput","superInput","inputWrap","htmlFor","autoComplete","value","key","name","id","placeHolder","hidePlaceHolder","Test","TempHeader","style","display","flexDirection","justifyContent","TEST","SIGN_UP","LOGIN","NEW_PASSWORD","FORGOT_PASSWORD","ERROR_404","Routes","path","exact","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","age","rootReducers","combineReducers","profile","state","action","store","createStore","applyMiddleware","thunkMiddleWare","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f33f352e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"SuperInputText_inputWrap__3-vJ3\",\"superInput\":\"SuperInputText_superInput__3bIrW\",\"placeHolder\":\"SuperInputText_placeHolder__jNWZW\",\"hidePlaceHolder\":\"SuperInputText_hidePlaceHolder__mg2sB\",\"errorInput\":\"SuperInputText_errorInput__yMflc\",\"error\":\"SuperInputText_error__3fTGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Error404_wrap__1IT3M\",\"notfound\":\"Error404_notfound__1iP_a\",\"notfound404\":\"Error404_notfound404__1xmNg\",\"navLink\":\"Error404_navLink__3nnfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2tZIj\",\"focus-visible\":\"SuperButton_focus-visible__9h7-y\",\"red\":\"SuperButton_red__HzRdF\",\"button-24\":\"SuperButton_button-24__1nia5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1MDne\",\"spanClassName\":\"SuperCheckbox_spanClassName__12xAq\"};","import React from 'react'\r\n\r\n\r\nfunction Login() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\n\r\n\r\nfunction SignUp() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Sign Up Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","import React from 'react'\r\n\r\n\r\nfunction Profile() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Error404.module.css'\r\nimport {PATH} from \"./Routes\";\r\n\r\n\r\nfunction Error404() {\r\n\r\n    return (\r\n        <div className={s.wrap}>\r\n            <div className={s.notfound}>\r\n\r\n                <div className={s.notfound404}>\r\n                    <h1>404</h1>\r\n                </div>\r\n                <h2>Oops! This Page Could Not Be Found</h2>\r\n                <p>Sorry but the page you are looking for does not exist, have been removed. name changed or is\r\n                    temporarily unavailable</p>\r\n\r\n                <NavLink className={s.navLink} to={PATH.PROFILE}>Go To Homepage</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\n\r\n\r\nfunction ForgotPassword() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Forgot Password Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React from 'react'\r\n\r\n\r\nfunction NewPassword() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>New Password Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPassword","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeChecked) {\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n\r\n        if (onChange) {\r\n            onChange(e)\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label >\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n\r\n    return (\r\n        <div className={s.inputWrap}>\r\n            <label htmlFor=\"name\">\r\n            <input\r\n                type={'text'}\r\n                autoComplete='off'\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                name=\"name\"\r\n                id='name'\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n                {<span className={ restProps.value === '' ? s.placeHolder: s.hidePlaceHolder }>Type here</span>}\r\n            </label>\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React from 'react'\r\nimport SuperButton from \"../components/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"../components/c1-SuperInputText/SuperInputText\";\r\n\r\n\r\nfunction Test() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Test Page</h1>\r\n            <SuperInputText/>\r\n            <SuperButton>Test</SuperButton>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test","import {NavLink} from \"react-router-dom\"\r\nimport React from \"react\";\r\nimport {PATH} from \"../pages/Routes\";\r\n\r\n\r\nfunction TempHeader() {\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between'}}>\r\n            <NavLink to={PATH.TEST}>Test Page</NavLink>\r\n            <NavLink to={PATH.SIGN_UP}>Sign Up Page</NavLink>\r\n            <NavLink to={PATH.LOGIN}>Login Page</NavLink>\r\n            <NavLink to={PATH.NEW_PASSWORD}>New Password Page</NavLink>\r\n            <NavLink to={PATH.FORGOT_PASSWORD}>Forgot Password Page</NavLink>\r\n            <NavLink to={PATH.ERROR_404}>404 Error Page</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TempHeader","import {Redirect, Switch} from \"react-router-dom\"\r\nimport Login from \"./Login\";\r\nimport SignUp from \"./SignUP\";\r\nimport Profile from \"./Profile\";\r\nimport Error404 from \"./Error404\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport NewPassword from \"./NewPassword\";\r\nimport Test from \"./Test\";\r\nimport {Route} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport TempHeader from \"../temp/TempHeader\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    SIGN_UP: '/signup',\r\n    PROFILE: '/profile',\r\n    ERROR_404: '/error404',\r\n    FORGOT_PASSWORD: '/forgotpassword',\r\n    NEW_PASSWORD: '/newpassword',\r\n    TEST: '/test',\r\n}\r\n\r\n\r\nfunction Routes() {\r\n\r\n    return (\r\n        <>\r\n           <TempHeader/>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.SIGN_UP} render={() => <SignUp/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.FORGOT_PASSWORD} render={() => <ForgotPassword/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Routes","import React from 'react';\nimport './App.css';\nimport Routes from \"./pages/Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Routes/>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const SET_PROFILE = \"SET-PROFILE\"\r\n\r\n\r\nconst initialState = {\r\n    name: 'Aleksandr',\r\n    age: 23\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-PROFILE\": {\r\n            return {...state, name: action.name, age: action.age}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ActionsType = setProfileActionType\r\n\r\nexport type setProfileActionType = ReturnType<typeof setProfileAction>\r\nexport const setProfileAction = (name: string, age: number) => {\r\n    return {\r\n        type: SET_PROFILE,\r\n        name, age\r\n    } as const\r\n}\r\n\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport thunkMiddleWare from 'redux-thunk'\r\n\r\n\r\nlet rootReducers = combineReducers({\r\n    profile: profileReducer,\r\n})\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducers>\r\nexport type storeType = typeof store\r\nconst store = createStore( rootReducers, applyMiddleware(thunkMiddleWare))\r\n\r\nexport default store\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}